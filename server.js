// server.js
const express = require("express");
const axios = require("axios");

const app = express();
const PORT = process.env.PORT || 3000;

// üîë –í–ø–∏—à–∏ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ —Å—é–¥–∏
const BOT_TOKEN = "8285002916:AAHZJXjZgT1G9RxV2bjqLgGnaC73iDWhKT4";
const CHAT_ID = "6133407632"; // —Ç–≤—ñ–π id
const TELEGRAM_API = `https://api.telegram.org/bot${BOT_TOKEN}`;

// –ü–∞—Ä—Å–∏–º–æ JSON-–∑–∞–ø–∏—Ç–∏ –≤—ñ–¥ Telegram
app.use(express.json());

// üìå –û–±—Ä–æ–±–∫–∞ webhook –≤—ñ–¥ Telegram
app.post("/webhook", async (req, res) => {
  const message = req.body.message;

  if (!message) {
    return res.sendStatus(200);
  }

  const chatId = message.chat.id;
  const text = message.text;

  if (text === "/start") {
    await axios.post(`${TELEGRAM_API}/sendMessage`, {
      chat_id: chatId,
      text: "–ü—Ä–∏–≤—ñ—Ç! –Ø –±—É–¥—É –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Ç–æ–±—ñ —á–∞—Å –∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É ‚è∞"
    });
  }

  res.sendStatus(200);
});

// üìå –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —á–∞—Å—É —â–æ—Ö–≤–∏–ª–∏–Ω–∏
async function sendMessage() {
  try {
    const now = new Date();
    const timeStr = now.toLocaleTimeString("uk-UA", { hour12: false });
    await axios.post(`${TELEGRAM_API}/sendMessage`, {
      chat_id: CHAT_ID,
      text: `–ó–∞—Ä–∞–∑ —á–∞—Å: ${timeStr}`
    });
    console.log("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ:", timeStr);
  } catch (err) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ:", err.response?.data || err.message);
  }
}

// üìå –Ü–Ω—Ç–µ—Ä–≤–∞–ª —É 1 —Ö–≤
setInterval(sendMessage, 60 * 1000);

// üìå –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
app.get("/", (req, res) => {
  res.send("Telegram –±–æ—Ç –ø—Ä–∞—Ü—é—î ‚úÖ");
});

// üìå –°—Ç–∞—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, async () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);

  // üîó –†–µ—î—Å—Ç—Ä—É—î–º–æ webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É
  const url = `https://${process.env.PROJECT_DOMAIN}.glitch.me/webhook`;
  try {
    await axios.get(`${TELEGRAM_API}/setWebhook?url=${url}`);
    console.log("Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:", url);
  } catch (err) {
    console.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ webhook:", err.response?.data || err.message);
  }
});
